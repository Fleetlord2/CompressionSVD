# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
# директория проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# чтение конфига
cfg <- read.config('config.cfg')
# подключение к SQLite
con <- dbConnect(SQLite(), cfg$db_settings$db_path)
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
# Запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
library(DBI)     # интерфейс для работы с СУБД
library(configr) # чтение конфига
library(readr)   # чтение текстовых SQL файлов
library(RSQLite) # драйвер для подключения к SQLite
# директория проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# чтение конфига
cfg <- read.config('config.cfg')
# подключение к SQLite
con <- dbConnect(SQLite(), cfg$db_settings$db_path)
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
# Запускаем бота
updater$start_polling()
# ###########################################################
# handlers
# command handlers
start_h <- CommandHandler('start', start)
state_h <- CommandHandler('state', state)
reset_h <- CommandHandler('reset', reset)
# message handlers
## !MessageFilters$command - означает что команды данные обработчики не обрабатывают,
## только текстовые сообщения
wait_photo_h  <- MessageHandler(enter_photo,  MessageFilters$wait_photo  & !MessageFilters$command)
wait_data_h <- MessageHandler(enter_confid, MessageFilters$wait_data & !MessageFilters$command)
# Запускаем бота
updater$start_polling()
handler$check_update(update)
updater
updater$start_polling()
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
source("~/CompressionJPEG/bot.R", encoding = 'UTF-8', echo=TRUE)
# Запускаем бота
updater$start_polling()
library(DBI)     # интерфейс для работы с СУБД
library(configr) # чтение конфига
library(readr)   # чтение текстовых SQL файлов
library(RSQLite) # драйвер для подключения к SQLite
# директория проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# чтение конфига
cfg <- read.config('config.cfg')
# подключение к SQLite
con <- dbConnect(SQLite(), cfg$db_settings$db_path)
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
# Запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_data_h
# Запускаем бота
updater$start_polling()
library(DBI)     # интерфейс для работы с СУБД
library(configr) # чтение конфига
library(readr)   # чтение текстовых SQL файлов
library(RSQLite) # драйвер для подключения к SQLite
# директория проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# чтение конфига
cfg <- read.config('config.cfg')
# подключение к SQLite
con <- dbConnect(SQLite(), cfg$db_settings$db_path)
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
# ###########################################################
# message state filters
# фильтр сообщений в состоянии ожидания имени
MessageFilters$wait_confid <- BaseFilter(function(message) {
get_state( message$chat_id )  == "wait_confid"
}
)
# фильтр сообщений в состоянии ожидания возраста
MessageFilters$wait_photo <- BaseFilter(function(message) {
get_state( message$chat_id )   == "wait_photo"
}
)
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_confid_h
# Запускаем бота
updater$start_polling()
View(updater)
body(updater[["dispatcher"]][["add_handler"]])
body(updater[["dispatcher"]][["process_update"]])[[2]][[4]][[2]][[4]]
# Запускаем бота
updater$start_polling()
# Запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_confid_h
# Запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_confid_h
# Запускаем бота
updater$start_polling()
# Запускаем бота
updater$start_polling()
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_confid_h
# создаём экземпляр бота
bot <- Bot(token ="5254481322:AAEXPNx5quQQMIlE2IWg6EN4BiXazxcblTw")
library(telegram.bot)
# создаём экземпляр бота
bot <- Bot(token ="5254481322:AAEXPNx5quQQMIlE2IWg6EN4BiXazxcblTw")
updater <- Updater('5254481322:AAEXPNx5quQQMIlE2IWg6EN4BiXazxcblTw')
# Пишем метод для приветсвия
say_hello <- function(bot, update) {
# Имя пользователя с которым надо поздароваться
user_name <- update$message$from$first_name
# Отправка приветственного сообщения
bot$sendMessage(update$message$chat_id,
text = paste0("Моё почтение, ", user_name, "!"),
parse_mode = "Markdown")
bot$sendAnimation(update$message$chat_id,
animation = "https://c.tenor.com/DBnP_zU4cLIAAAAd/%D1%82%D0%BE%D0%BC%D0%B0%D1%81-%D1%88%D0%B5%D0%BB%D0%B1%D0%B8.gif"
)
bot$sendMessage(update$message$chat_id,
text = "/confid - задать процент потери.
/components - задать количество компонент.
/compress - задать фотку для сжатия и ожидать результата.")
}
# создаём обработчик
hi_hendler <- CommandHandler('hi', say_hello)
# добаляем обработчик в диспетчер
updater <- updater + hi_hendler
# запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_confid_h
# Запускаем бота
updater$start_polling()
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_confid_h
# Запускаем бота
updater$start_polling()
library(DBI)     # интерфейс для работы с СУБД
library(configr) # чтение конфига
library(readr)   # чтение текстовых SQL файлов
library(RSQLite) #
# директория проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# чтение конфига
cfg <- read.config('config.cfg')
# подключение к SQLite
con <- dbConnect(SQLite(), cfg$db_settings$db_path)
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
library(telegram.bot)
library(tidyverse)
library(RSQLite)
library(DBI)
library(configr)
# переходим в папку проекта
setwd(Sys.getenv('TG_BOT_PATH'))
# читаем конфиг
cfg <- read.config('config.cfg')
# создаём экземпляр бота
updater <- Updater(cfg$bot_settings$bot_token)
# Загрузка компонентов бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\db_bot_functions.R", encoding = "UTF-8") # функции для работы с БД
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\bot_methods.R", encoding = "UTF-8")  # методы бота
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\messagefilter.R", encoding = "UTF-8") # фильтры сообщений
source(file = "c:\\Users\\Fleetlord\\Documents\\CompressionJPEG\\handlers.R", encoding = "UTF-8") # обработчики сообщений
# Добавляем обработчики в диспетчер
updater <- updater +
start_h +
wait_photo_h +
state_h +
reset_h +
wait_confid_h
# Запускаем бота
updater$start_polling()
# Создание таблиц в базе
dbExecute(con, statement = read_file('create_db_data.sql'))
dbExecute(con, statement = read_file('create_db_state.sql'))
source("~/CompressionJPEG/compress.R", encoding = 'UTF-8')
